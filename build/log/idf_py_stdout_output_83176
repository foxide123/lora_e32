[1/11] Performing build step for 'bootloader'
[1/1] cd /home/ubuntu/esp32/lora_e32/build/bootloader/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/ubuntu/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/ubuntu/esp32/lora_e32/build/bootloader/bootloader.bin
Bootloader binary size 0x5250 bytes. 0x2db0 bytes (36%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/9] Building C object esp-idf/wifi/CMakeFiles/__idf_wifi.dir/src/wifi_scan.c.obj
[4/9] Linking C static library esp-idf/wifi/libwifi.a
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable lora_e32.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/ubuntu/esp32/lora_e32/build/lora_e32.bin
[9/9] cd /home/ubuntu/esp32/lora_e32/build/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/ubuntu/esp32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ubuntu/esp32/lora_e32/build/partition_table/partition-table.bin /home/ubuntu/esp32/lora_e32/build/lora_e32.bin
lora_e32.bin binary size 0xbf0a0 bytes. Smallest app partition is 0x100000 bytes. 0x40f60 bytes (25%) free.
